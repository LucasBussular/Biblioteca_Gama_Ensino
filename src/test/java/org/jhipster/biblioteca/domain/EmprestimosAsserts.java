package org.jhipster.biblioteca.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmprestimosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmprestimosAllPropertiesEquals(Emprestimos expected, Emprestimos actual) {
        assertEmprestimosAutoGeneratedPropertiesEquals(expected, actual);
        assertEmprestimosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmprestimosAllUpdatablePropertiesEquals(Emprestimos expected, Emprestimos actual) {
        assertEmprestimosUpdatableFieldsEquals(expected, actual);
        assertEmprestimosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmprestimosAutoGeneratedPropertiesEquals(Emprestimos expected, Emprestimos actual) {
        assertThat(expected)
            .as("Verify Emprestimos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmprestimosUpdatableFieldsEquals(Emprestimos expected, Emprestimos actual) {
        assertThat(expected)
            .as("Verify Emprestimos relevant properties")
            .satisfies(e -> assertThat(e.getDataEmprestimo()).as("check dataEmprestimo").isEqualTo(actual.getDataEmprestimo()))
            .satisfies(e -> assertThat(e.getDataDevolucao()).as("check dataDevolucao").isEqualTo(actual.getDataDevolucao()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmprestimosUpdatableRelationshipsEquals(Emprestimos expected, Emprestimos actual) {
        assertThat(expected)
            .as("Verify Emprestimos relationships")
            .satisfies(e -> assertThat(e.getLivro()).as("check livro").isEqualTo(actual.getLivro()))
            .satisfies(e -> assertThat(e.getCliente()).as("check cliente").isEqualTo(actual.getCliente()));
    }
}
